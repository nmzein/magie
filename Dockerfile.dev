FROM oven/bun:1.1.33 AS bun
FROM rust:1.83.0-slim-bookworm AS rust
FROM debian:bookworm-slim AS debian

# =======================================

FROM bun AS frontend

# Install frontend.
WORKDIR /frontend

COPY ./frontend/package.json ./
COPY ./frontend/bun.lockb ./
COPY ./frontend/tsconfig.json ./
COPY ./frontend/svelte.config.js ./
COPY ./frontend/vite.config.ts ./

RUN bun install --frozen-lockfile --ignore-scripts

# Install geometry-computer.
WORKDIR /backend

COPY ./backend/geometry-computer/package.json ./
COPY ./backend/geometry-computer/bun.lockb ./

RUN bun install --frozen-lockfile

# =======================================

FROM rust AS backend

RUN --mount=type=cache,target=/var/cache/apt \
    apt-get update && \
    apt-get install -y build-essential \
                       cmake \
                       nasm \
                       pkg-config \
                       libclang-dev \
                       libopenslide-dev \
                       libssl-dev

COPY .env ./
# Change the value of PUBLIC_DOMAIN to 0.0.0.0 if left set to localhost.
RUN sed -i 's/PUBLIC_DOMAIN = localhost/PUBLIC_DOMAIN = 0.0.0.0/g' ./.env

WORKDIR /backend
COPY ./backend ./
RUN cargo build

# =======================================

FROM debian AS final

COPY --from=frontend /usr/local/bin/bun /usr/local/bin/bun
COPY --from=frontend /usr/local/bin/bunx /usr/local/bin/bunx
COPY --from=backend /usr/lib/x86_64-linux-gnu/ /usr/lib/x86_64-linux-gnu/
COPY --from=backend .env ./app/.env

WORKDIR /app/frontend

# Copy node_modules from the frontend build.
COPY --from=frontend /frontend/node_modules ./node_modules
# Copy frontend source files.
COPY ./frontend ./

WORKDIR /app/backend/geometry-computer
COPY --from=frontend ./backend/node_modules ./
COPY ./backend/geometry-computer ./

WORKDIR /app/backend
COPY --from=backend /backend/target/debug/rendering_engine ./
RUN mkdir -p ./state

WORKDIR /app
RUN mkdir -p ./stores
# TODO: This should be handled by the app.
RUN mkdir -p ./stores/Local Storage
RUN mkdir -p ./stores/Bin

EXPOSE 4000
EXPOSE 3000

CMD /bin/bash -c "cd backend && ./rendering_engine & cd frontend && bun dev -- --host"