FROM node:21.6.2-bookworm-slim AS node
FROM rust:slim-bookworm AS rust

FROM node AS frontend

RUN --mount=type=cache,target=/var/cache/apt \
    apt-get update

RUN --mount=type=cache,target=/var/cache/npm \
    npm install -g npm@10.5.0 && \
    npm install -g vite

WORKDIR /app/frontend

# Copy only necessary files to minimise rebuild.
COPY ./frontend/package*.json /app/frontend
COPY ./frontend/tsconfig.json /app/frontend
COPY ./frontend/svelte.config.js /app/frontend
COPY ./frontend/vite.config.ts /app/frontend

RUN --mount=type=cache,target=/var/cache/app/npm \
    npm ci --legacy-peer-deps

# Copy rest of files.
COPY ./frontend /app/frontend

WORKDIR /app
COPY .env /app
# Change the value of PUBLIC_DOMAIN to 0.0.0.0 if left set to localhost.
RUN sed -i 's/PUBLIC_DOMAIN = localhost/PUBLIC_DOMAIN = 0.0.0.0/g' /app/.env

FROM rust AS backend

RUN --mount=type=cache,target=/var/cache/apt \
    apt-get update && \
    apt-get install -y build-essential \
                       cmake \
                       nasm \
                       pkg-config \
                       libclang-dev \
                       libopenslide-dev \
                       libssl-dev

WORKDIR /app/backend/rendering-engine

COPY --from=frontend /app/.env /app

COPY ./backend/rendering-engine/migrations /app/backend/rendering-engine/migrations
COPY ./backend/rendering-engine/.sqlx /app/backend/rendering-engine/.sqlx
COPY ./backend/rendering-engine/state /app/backend/rendering-engine/state

# Incremental build.
RUN echo "fn main() {}" > temp.rs
COPY ./backend/rendering-engine/Cargo.* /app/backend/rendering-engine
RUN sed -i 's#src/main.rs#temp.rs#' Cargo.toml
RUN cargo build

RUN sed -i 's#temp.rs#src/main.rs#' Cargo.toml
COPY ./backend/rendering-engine/src /app/backend/rendering-engine/src
RUN cargo build

COPY ./backend/store /app/backend/store

FROM rust AS final

COPY --from=frontend /usr/local/bin/node /usr/local/bin/node
COPY --from=frontend /usr/local/include/node /usr/local/include/node
COPY --from=frontend /usr/local/lib/node_modules /usr/local/lib/node_modules
RUN ln -s /usr/local/lib/node_modules/npm/bin/npm-cli.js /usr/local/bin/npm

# TODO: Fix cache copying from backend.
COPY --from=backend . .

WORKDIR /app

COPY --from=frontend /app/.env /app
COPY --from=frontend /app/frontend /app/frontend
# TODO: Don't copy full source code.
COPY --from=backend /app/backend /app/backend

EXPOSE 4000
EXPOSE 3000

CMD /bin/bash -c "cd backend/rendering-engine && cargo run & cd frontend && npm run ci:dev -- --host"